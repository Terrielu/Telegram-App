// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram?.WebApp;
if (tg) {
    tg.expand();
}

// URL –±—ç–∫–µ–Ω–¥–∞ —á–µ—Ä–µ–∑ Cloudflare
const BACKEND_URL = 'https://homiq.21ci.uz';

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const searchInput = document.getElementById('queryInput');
const searchForm = document.getElementById('searchForm');
const resultsDiv = document.getElementById('result');
const voiceBtn = document.getElementById('voiceBtn');
const themeToggle = document.getElementById('themeToggle');

// –ë–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
const loadingDiv = document.createElement('div');
loadingDiv.id = 'loading';
loadingDiv.style.display = 'none';
loadingDiv.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞...';
document.body.appendChild(loadingDiv);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
function toggleLoading(show) {
    loadingDiv.style.display = show ? 'block' : 'none';
    const submitBtn = searchForm.querySelector('button[type="submit"]');
    if (submitBtn) submitBtn.disabled = show;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function showResults(result) {
    resultsDiv.innerHTML = `
        <div class="result-card">
            <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞</h3>
            <p>${result}</p>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏
function showError(message) {
    resultsDiv.innerHTML = `
        <div class="error-card">
            <h3>–û—à–∏–±–∫–∞</h3>
            <p>${message}</p>
        </div>
    `;
}

// –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥
function startVoiceInput() {
    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
    recognition.lang = "ru-RU";

    recognition.onstart = function () {
        searchInput.placeholder = "–°–ª—É—à–∞—é...";
    };

    recognition.onresult = function (event) {
        const transcript = event.results[0][0].transcript;
        searchInput.value = transcript;
        searchForm.dispatchEvent(new Event("submit")); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
    };

    recognition.onerror = function (event) {
        console.error("–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏:", event.error);
        searchInput.placeholder = "–ü–æ–∏—Å–∫...";
    };

    recognition.onend = function () {
        searchInput.placeholder = "–ü–æ–∏—Å–∫...";
    };

    recognition.start();
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±—ç–∫–µ–Ω–¥—É
async function sendSearchRequest(query) {
    try {
        toggleLoading(true);
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', query);

        const response = await fetch(`${BACKEND_URL}/search`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({ prompt: query })
        });

        console.log('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', response.status);

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);

        if (typeof data.error === 'undefined') {
          showResults(data.reply ?? "ü§ñ –Ø –Ω–µ –Ω–∞—à—ë–ª –Ω–∏—á–µ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ.");
        } else {
          showError("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞! –¢–µ–∫—Å—Ç: "+data.error);  
        }
""
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
        showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
        toggleLoading(false);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
searchForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const query = searchInput.value.trim();
    if (!query) {
        showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å');
        return;
    }
    await sendSearchRequest(query);
});

// –ö–Ω–æ–ø–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
voiceBtn.addEventListener("click", function () {
    startVoiceInput();
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
themeToggle.addEventListener("change", function () {
    document.body.classList.toggle("dark-mode", this.checked);
});
